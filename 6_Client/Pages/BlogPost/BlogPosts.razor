@page "/AllPost"


<div >
    @foreach (var blogPostDto in BlogPostDtoList)
    {
        <div>
            <TelerikCard Width="250px">
                <CardHeader Class="k-hbox">
                    @*<div class="k-avatar-circle k-avatar avatar-size">
                        <div class="k-avatar-image ng-star-inserted" style="background-image: url(@item.AvatarSrc);"></div>
                    </div>*@
                    <div>
                        <CardTitle>
                            @blogPostDto.Title
                        </CardTitle>
                        <CardSubTitle>
                            @blogPostDto.Summary
                        </CardSubTitle>
                    </div>
                </CardHeader>
                @*<CardBody>
                    <Ca
                </CardBody>*@
                @*<CardImage Src="@blogPostDto.ImageSrc" Class="image-height"></CardImage>*@
                <!--<CardActions Class="justify-space-between">-->
                    @*<div>
                        <TelerikButton Class="@($"k-flat {item.LikeActionClass}")" Icon="@item.LikeActionIcon" Title="Like" OnClick="(() => item.PostLiked = !item.PostLiked)"></TelerikButton>
                        <TelerikButton Class="k-flat" Icon="comment" Title="Comment" OnClick="@(() => item.CommentsVisible = !item.CommentsVisible)"></TelerikButton>
                        <TelerikButton Class="k-flat" Icon="share" Title="Share" OnClick="@(() => Share(item))"></TelerikButton>
                    </div>
                    <span class="post-likes-count">@item.PostLikedText</span>*@
                <!--</CardActions>-->
                @*@if (item.CommentsVisible)
                {
                    <CardSeparator></CardSeparator>
                    <CardBody>
                        @foreach (var comment in item.Comments)
                        {
                            <CardComment Comment="@comment"></CardComment>
                        }
                        <TelerikTextArea @bind-Value="@item.TempComment" Width="100%" Class="mb-xs"></TelerikTextArea>
                        <div class="align-end">
                            <TelerikButton Class="k-flat" Primary="true" OnClick="@(() => PostComment(item))">Post</TelerikButton>
                        </div>
                    </CardBody>
                }*@
            </TelerikCard>
        </div>
    }
</div>

@code {

    protected List<BlogPostDto> BlogPostDtoList = new List<BlogPostDto>();

    protected override async Task OnInitializedAsync()
    {
        BlogPostDtoList = await _httpRequestHandler
        .GetAsHttpAsync<List<BlogPostDto>>("BlogPost/GetAllBlogPost");
    }

}
