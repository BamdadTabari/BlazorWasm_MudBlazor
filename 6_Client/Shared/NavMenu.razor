<style>
    .tetsdsyt {
        border-left: 2px cornflowerblue solid
    }
</style>
<div class="drawer-container IH10 tetsdsyt" >
    <div class="text-center" style="border-top: 2px cornflowerblue solid">
        <TelerikButton OnClick="@ToggleDrawer" Icon="menu" Class="k-flat"></TelerikButton>
    </div>
    <TelerikDrawer @ref="@Drawer" Data="Data" MiniMode="true" Mode="@DrawerMode.Push" @bind-SelectedItem="SelectedItem">
        @*<Content>
        </Content>*@
    </TelerikDrawer>
</div>

@code {
    public TelerikDrawer<DrawerItem> Drawer { get; set; }
    public DrawerItem SelectedItem { get; set; }
    public IEnumerable<DrawerItem> Data { get; set; } =
        new List<DrawerItem>
        {
            new DrawerItem
            {
                Text = "Home",
                Icon = "home",
                Url = "/"
            },
            new DrawerItem { Separator = true},
            new DrawerItem
            {
                Text = "AllPost",
                Icon = "notification",
                Url = "/AllPost"
            },
            new DrawerItem
            {
                Text = "addBlogPost",
                Icon = "calendar",
                Url = "/addBlogPost"
            },
            new DrawerItem { Separator = true},
                //new DrawerItem
                //{
                //    Text = "Attachments",
                //    Icon = "hyperlink-email",
                //},
                //new DrawerItem
                //{
                //    Text = "Favourites",
                //    Icon = "star-outline",
                //    AdditionalData = new List<(string, string)>
                //{
                //        (null, "70% Discount!"),
                //        (null, "90% Discount!"),
                //        (null, "One time offer!"),
                //    }
                //}
            };

    protected override Task OnInitializedAsync()
    {
        SelectedItem = Data.First();

        return base.OnInitializedAsync();
    }

    public async Task ToggleDrawer() => await Drawer.ToggleAsync();
}