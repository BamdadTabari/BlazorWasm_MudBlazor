<style>
    .dfsdf {
        position: fixed;
        z-index: 10000;
    }
</style>
<div class="drawer-container IH10 IBGNewBlush" >
    <div class="dfsdf IH10">
        <TelerikButton OnClick="@ToggleDrawer" Icon="menu" Class="k-flat"></TelerikButton>
        <TelerikDrawer @ref="@Drawer" Data="Data" MiniMode="true"
                       Mode="@DrawerMode.Push" @bind-SelectedItem="SelectedItem">
        </TelerikDrawer>
    </div>
</div>

@code {

    #region Drawer Data

    public TelerikDrawer<DrawerItem> Drawer { get; set; }
    public DrawerItem SelectedItem { get; set; }
    public IEnumerable<DrawerItem> Data { get; set; } =
        new List<DrawerItem>
        {
            new DrawerItem
            {
                Text = "Home",
                Icon = "home",
                Url = "/"
            },
            new DrawerItem { Separator = true},
            new DrawerItem
            {
                Text = "AllPost",
                Icon = "notification",
                Url = "/AllPost"
            },
            new DrawerItem { Separator = true},
            new DrawerItem
            {
                Text = "addBlogPost",
                Icon = "calendar",
                Url = "/addBlogPost"
            },
            //new DrawerItem { Separator = true},
            //new DrawerItem
            //{
            //    Text = "LogOut",
            //    Icon = "calendar",
            //    Url = "/LogOut"
            //},
            //new DrawerItem { Separator = true},
            //new DrawerItem
            //{
            //    Text = "Login",
            //    Icon = "calendar",
            //    Url = "/Login"
            //},
            //new DrawerItem { Separator = true},
            //new DrawerItem
            //{
            //    Text = "Register",
            //    Icon = "calendar",
            //    Url = "/Register"
            //},
            //new DrawerItem { Separator = true}
        };

    #endregion

    #region Drawer Methods

    protected override Task OnInitializedAsync()
    {
        SelectedItem = Data.First();

        return base.OnInitializedAsync();
    }

    public async Task ToggleDrawer() => await Drawer.ToggleAsync();

    #endregion
}